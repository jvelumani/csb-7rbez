{"version":3,"sources":["Carousel.js","App.js","index.js"],"names":["CarouselItem","children","width","className","style","Carousel","useState","activeIndex","setActiveIndex","paused","setPaused","updateIndex","newIndex","React","Children","count","useEffect","interval","setInterval","clearInterval","handlers","useSwipeable","onSwipedLeft","onSwipedRight","onMouseEnter","onMouseLeave","transform","map","child","index","cloneElement","onClick","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"uNAGaA,EAAe,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACvC,OACE,qBAAKC,UAAU,gBAAgBC,MAAO,CAAEF,MAAOA,GAA/C,SACGD,KAoFQI,EAhFE,SAAC,GAAkB,IAAhBJ,EAAe,EAAfA,SAClB,EAAsCK,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAc,SAACC,GACfA,EAAW,EACbA,EAAWC,IAAMC,SAASC,MAAMd,GAAY,EACnCW,GAAYC,IAAMC,SAASC,MAAMd,KAC1CW,EAAW,GAGbJ,EAAeI,IAGjBI,qBAAU,WACR,IAAMC,EAAWC,aAAY,WACtBT,GACHE,EAAYJ,EAAc,KAE3B,KAEH,OAAO,WACDU,GACFE,cAAcF,OAKpB,IAAMG,EAAWC,uBAAa,CAC5BC,aAAc,kBAAMX,EAAYJ,EAAc,IAC9CgB,cAAe,kBAAMZ,EAAYJ,EAAc,MAGjD,OACE,gDACMa,GADN,IAEEjB,UAAU,WACVqB,aAAc,kBAAMd,GAAU,IAC9Be,aAAc,kBAAMf,GAAU,IAJhC,UAME,qBACEP,UAAU,QACVC,MAAO,CAAEsB,UAAU,eAAD,OAA+B,IAAdnB,EAAjB,OAFpB,SAIGM,IAAMC,SAASa,IAAI1B,GAAU,SAAC2B,EAAOC,GACpC,OAAOhB,IAAMiB,aAAaF,EAAO,CAAE1B,MAAO,cAG9C,sBAAKC,UAAU,aAAf,UACE,wBACE4B,QAAS,WACPpB,EAAYJ,EAAc,IAF9B,kBAOCM,IAAMC,SAASa,IAAI1B,GAAU,SAAC2B,EAAOC,GACpC,OACE,wBACE1B,UAAS,UAAK0B,IAAUtB,EAAc,SAAW,IACjDwB,QAAS,WACPpB,EAAYkB,IAHhB,SAMGA,EAAQ,OAIf,wBACEE,QAAS,WACPpB,EAAYJ,EAAc,IAF9B,0B,MC3EO,SAASyB,IACtB,OACE,sBAAK7B,UAAU,MAAf,UACE,0CACA,eAAC,EAAD,WACE,cAAC,EAAD,qBACA,cAAC,EAAD,qBACA,cAAC,EAAD,qBACA,cAAC,EAAD,qBACA,cAAC,EAAD,qBACA,cAAC,EAAD,qBACA,cAAC,EAAD,2BCTR,IAAM8B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACL,EAAD,MAEFC,K","file":"static/js/main.59a199f9.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\n\r\nexport const CarouselItem = ({ children, width }) => {\r\n  return (\r\n    <div className=\"carousel-item\" style={{ width: width }}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nconst Carousel = ({ children }) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [paused, setPaused] = useState(false);\r\n\r\n  const updateIndex = (newIndex) => {\r\n    if (newIndex < 0) {\r\n      newIndex = React.Children.count(children) - 1;\r\n    } else if (newIndex >= React.Children.count(children)) {\r\n      newIndex = 0;\r\n    }\r\n\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (!paused) {\r\n        updateIndex(activeIndex + 1);\r\n      }\r\n    }, 3000);\r\n\r\n    return () => {\r\n      if (interval) {\r\n        clearInterval(interval);\r\n      }\r\n    };\r\n  });\r\n\r\n  const handlers = useSwipeable({\r\n    onSwipedLeft: () => updateIndex(activeIndex + 1),\r\n    onSwipedRight: () => updateIndex(activeIndex - 1)\r\n  });\r\n\r\n  return (\r\n    <div\r\n      {...handlers}\r\n      className=\"carousel\"\r\n      onMouseEnter={() => setPaused(true)}\r\n      onMouseLeave={() => setPaused(false)}\r\n    >\r\n      <div\r\n        className=\"inner\"\r\n        style={{ transform: `translateX(-${activeIndex * 100}%)` }}\r\n      >\r\n        {React.Children.map(children, (child, index) => {\r\n          return React.cloneElement(child, { width: \"100%\" });\r\n        })}\r\n      </div>\r\n      <div className=\"indicators\">\r\n        <button\r\n          onClick={() => {\r\n            updateIndex(activeIndex - 1);\r\n          }}\r\n        >\r\n          Prev\r\n        </button>\r\n        {React.Children.map(children, (child, index) => {\r\n          return (\r\n            <button\r\n              className={`${index === activeIndex ? \"active\" : \"\"}`}\r\n              onClick={() => {\r\n                updateIndex(index);\r\n              }}\r\n            >\r\n              {index + 1}\r\n            </button>\r\n          );\r\n        })}\r\n        <button\r\n          onClick={() => {\r\n            updateIndex(activeIndex + 1);\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n","import Carousel, { CarouselItem } from \"./Carousel\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Carasole</h1>\n      <Carousel>\n        <CarouselItem>Item 1</CarouselItem>\n        <CarouselItem>Item 2</CarouselItem>\n        <CarouselItem>Item 3</CarouselItem>\n        <CarouselItem>Item 4</CarouselItem>\n        <CarouselItem>Item 5</CarouselItem>\n        <CarouselItem>Item 6</CarouselItem>\n        <CarouselItem>Item 7</CarouselItem>\n      </Carousel>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}